Titre du Projet : Application TODOLIST / Prise de notes
Objectif du Projet :

Créer une application web permettant aux utilisateurs de gérer leurs tâches et de prendre des notes de manière efficace et organisée. L'application sera développée en utilisant PHP et JavaScript (Vanilla) selon le modèle MVC (Modèle-Vue-Contrôleur).
Fonctionnalités Principales :

    Interface de connexion et d'inscription :
        Les utilisateurs pourront créer un compte et se connecter à l'application.
        Authentification basée sur les sessions.
        Possibilité de connexion via Google, Apple et Twitter.

    Gestion des abonnements :
        Intégration de Stripe pour la gestion des abonnements.
        Offres d'abonnement : Free, Pro, Business.
        Les abonnements offrent des fonctionnalités supplémentaires et suppriment les limites associées à l'abonnement de base.

    Gestion des tâches :
        Ajout, modification et suppression de tâches.
        Catégorisation des tâches avec un système de couleurs.
        Utilisation du modèle MVC pour implémenter la fonctionnalité d'ajout de tâches.

    Prise de notes :
        Interface de prise de notes accessible sans connexion.
        Sauvegarde des notes par local storage ou temporairement en base de données pour les utilisateurs connectés.

    Interface de compte :
        Possibilité pour les utilisateurs de modifier leurs informations de compte.
        Utilisation du modèle MVC pour gérer les modifications de compte.

    Design et Interactivité :
        Utilisation de SCSS pour le style CSS afin de rendre l'application visuellement attrayante.
        Utilisation de JavaScript pour ajouter de l'interactivité et rendre l'application dynamique.

Architecture de la Base de Données :

    Une table "users" pour stocker les informations des utilisateurs.
    Une table "billing" pour gérer les informations liées aux abonnements.
    Une table "colors" pour stocker les couleurs associées aux catégories de tâches.
    D'autres tables peuvent être ajoutées au besoin pour d'autres fonctionnalités.

Contraintes Techniques :

    Utilisation de PHP et JavaScript Vanilla pour le développement.
    Modèle MVC pour organiser le code de manière efficace et maintenable.
    Intégration de Stripe pour la gestion des abonnements.

Plan de Développement :

    Conception et Modélisation : Définir la structure de la base de données et l'architecture du projet.
    Développement Backend : Créer les modèles, contrôleurs et les scripts PHP pour gérer la logique métier.
    Développement Frontend : Implémenter les interfaces utilisateur en utilisant HTML, CSS (SCSS) et JavaScript.
    Intégration de Stripe : Intégrer le système de paiement pour gérer les abonnements.
    Tests et Débogage : Tester l'application pour s'assurer qu'elle fonctionne correctement et corriger les éventuels bogues.
    Déploiement : Déployer l'application sur un serveur web et la rendre accessible aux utilisateurs.